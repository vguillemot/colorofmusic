---
title: ""
---

This is the companion website of the article "Correspondence Analysis". The data of the "colors of music" experiment is shown below.

```{r setup, include=FALSE}
## Dans ce chunk :
# mettez vos options de chunk par d√©faut...  
knitr::opts_chunk$set(echo = FALSE)
# ... chargez toutes vos librairies
library(dplyr)
library(factoextra)
library(FactoMineR)
library(ggiraph)
library(ggplot2)
library(ggpubr)
library(ggrepel)
library(pander)
library(pheatmap)
library(PMA)
library(reshape2)
library(scales)
# R functions
html_tag_audio <- function(file, type = c("wav")) {
  type <- match.arg(type)
  htmltools::tags$audio(
    controls = "",
    htmltools::tags$source(
      src = file,
      type = glue::glue("audio/{type}", type = type)
    )
  )
}
```

::: {.panel-tabset}

```{r data}
data("colorOfMusic", package = "data4PCCAR")
tab <- colorOfMusic$contingencyTable
```

## Colors

```{r colors}
colors <- setNames(
  colorOfMusic$colorInformation$colorCodes,
  colorOfMusic$colorInformation$colorNames)

get_text_color <- function(bg_color) {
  rgb <- col2rgb(bg_color) / 255
  luminance <- 0.2126 * rgb[1] + 0.7152 * rgb[2] + 0.0722 * rgb[3]
  if (luminance > 0.5) {
    return("black")
  } else {
    return("white")
  }
}

color_df <- tibble(
  name = factor(names(colors), levels = names(colors)),
  color = colors 
)
color_df$text_color <- sapply(color_df$color, get_text_color)

color_df %>%
ggplot(aes(
  x = name, y = 1,
  fill = I(color))) +
  geom_col() +
  coord_flip() +
  geom_text(aes(label = name, y = 0.5, color = I(text_color)), hjust = 0.5) +
  theme_void()
```

## Music


Genre | Extract | Link
------|---------|------
Country | `r html_tag_audio("music/country.mp3", type = "wav")`| link
High F | `r html_tag_audio("music/highF.mp3", type = "wav")`| link
Jazz | `r html_tag_audio("music/jazz.mp3", type = "wav")`| link
Low F | `r html_tag_audio("music/lowF.mp3", type = "wav")`| link
Middle F | `r html_tag_audio("music/middleF.mp3", type = "wav")`| link
Opera | `r html_tag_audio("music/opera.mp3", type = "wav")`| link
Pop | `r html_tag_audio("music/pop.mp3", type = "wav")`| link
Rap | `r html_tag_audio("music/rap.mp3", type = "wav")`| link
Video Game | `r html_tag_audio("music/videogame.mp3", type = "wav")`| link





## Table

```{r tab, results='asis'}
pander::pandoc.table(tab)
```

## Heatmap

```{r heatmap}
# Color annotation
annotrow <- data.frame(
  Colors = colorOfMusic$colorInformation$colorNames, 
  row.names = colorOfMusic$colorInformation$colorNames)
# Custom colors
annotcolors <- list(
  Colors = setNames(colorOfMusic$colorInformation$colorCodes,
                      colorOfMusic$colorInformation$colorNames))
# Distance du chi-2 pour les lignes et les colonnes
Drow <- as.dist(ExPosition::chi2Dist(tab)$D)
Dcol <- as.dist(ExPosition::chi2Dist(t(tab))$D)
# Carte de chaleur
pheatmap(tab,
         clustering_method = "ward.D2",
         clustering_distance_rows = Drow,
         clustering_distance_cols = Dcol,
         annotation_row = annotrow, 
         annotation_colors = annotcolors, 
         color = grDevices::grey.colors(12, start = 1, end = 0),
         border_color = NA)
```


:::